#include<bits/stdc++.h>
using namespace std;

void solve(bool **board, int row, bool cols[], bool ndiag[], bool rdiag[], string asf,int n)
{
    if(row == n)
    {
        cout<<(asf)<<"."<<endl;
        return;
    }
    
    for(int col=0;col<n;col++)
    {
        if(cols[col] == false && ndiag[row + col] == false && rdiag[row - col + n-1] == false)
        {
            board[row][col] = true;
            cols[col] = true;
            ndiag[row + col] = true;
            rdiag[row - col + n-1] = true;
            
            solve(board,row + 1, cols, ndiag, rdiag, asf + to_string(row) + "-" + to_string(col) + "," + " ", n);
            
            board[row][col] = false;
            cols[col] = false;
            ndiag[row + col] = false;
            rdiag[row - col + n-1] = false;
        }
        
    }
    
}

int main()
{
    int n;cin>>n;
    
    //bool **board[n][n];
    
    bool **board;
    board=new bool*[n];
    for(int i=0;i<n;i++)
    board[i]=new bool[n];
    
    bool cols[n]={false};
    bool ndiag[2*n-1]={false};
    bool rdiag[2*n-1]={false};
    
    solve(board, 0 , cols , ndiag , rdiag , "" , n);
    
}
